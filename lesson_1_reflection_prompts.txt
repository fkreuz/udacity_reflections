How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Because we can see if the new versions have bug by looking the difference
	with the previous version.

How could having easy access to the entire history of a file make you a better
programmer in the long term?

    Because we can track our error and achievement.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?
    
    Pro: the version that was commited is always meaningful.
	Con: Sometimes we can forget to commit after working so then the next commit
	     will be too big to understand.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because in working on a code, it is often that the changes affect other files.

How can you use the commands git log and git diff to view the history of files?
    
    "git log" is to view the commited id and "git diff" is to see the differences 
	between two commited ids.

How might using version control make you more confident to make changes that
could break something?
    
    We can still undo anything that is wrong.

Now that you have your workspace set up, what do you want to try using Git for?

    My thesis maybe
